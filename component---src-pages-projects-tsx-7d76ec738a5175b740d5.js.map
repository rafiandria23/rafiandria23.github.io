{"version":3,"sources":["webpack:///./src/pages/projects.tsx"],"names":["ProjectsPage","threeLatestProjects","useState","allStrapiProject","edges","projectsFromGQL","setProjectsFromGQL","projectsHaveBeenFormatted","setProjectsHaveBeenFormatted","useEffect","Array","formattedProjectsFromGQL","map","project","node","cover","publicURL","title","description","length","projects"],"mappings":"20FAOe,SAASA,EAAT,I,2EAA6C,IAC1D,IAAMC,EAAsB,OAD8B,EAqBZC,mBAC5C,EAAID,EAAoBE,iBAAiBC,QAAU,IAD9CC,EArBmD,KAqBlCC,EArBkC,OAwBQJ,oBAEhE,GAFKK,EAxBmD,KAwBxBC,EAxBwB,KA6C1D,OAjBAC,qBAAU,WACR,GACER,EAAoBE,iBAAiBC,OACrCH,EAAoBE,iBAAiBC,iBAAiBM,MACtD,CACA,IAAMC,EAA2BV,EAAoBE,iBAAiBC,MAAMQ,KAC1E,SAACC,GAGC,OAFAA,EAAUA,EAAQC,MACVC,MAAQF,EAAQE,MAAMC,UACvBH,KAGXP,EAAmB,EAAIK,IACvBH,GAA6B,MAE9B,CAACP,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgB,MAAK,WACLC,YAAW,0GAEZb,EAAgBc,OAAS,IAAmC,IAA9BZ,EAC7B,kBAAC,IAAD,CAAqBa,SAAUf,IAE/B","file":"component---src-pages-projects-tsx-7d76ec738a5175b740d5.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PageProps, useStaticQuery, graphql } from 'gatsby';\n\nimport { Layout, LatestProfileBanner, SEO } from '@/components';\n\nexport interface ProjectsPageProps extends PageProps {}\n\nexport default function ProjectsPage({}: ProjectsPageProps) {\n  const threeLatestProjects = useStaticQuery(graphql`\n    query {\n      allStrapiProject(limit: 3, sort: { fields: [createdAt], order: DESC }) {\n        edges {\n          node {\n            strapiId\n            name\n            overview\n            cover {\n              publicURL\n            }\n            tags {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n  const [projectsFromGQL, setProjectsFromGQL] = useState<any[]>(\n    [...threeLatestProjects.allStrapiProject.edges] || []\n  );\n  const [projectsHaveBeenFormatted, setProjectsHaveBeenFormatted] = useState<\n    boolean\n  >(false);\n\n  useEffect(() => {\n    if (\n      threeLatestProjects.allStrapiProject.edges &&\n      threeLatestProjects.allStrapiProject.edges instanceof Array\n    ) {\n      const formattedProjectsFromGQL = threeLatestProjects.allStrapiProject.edges.map(\n        (project: any) => {\n          project = project.node;\n          project.cover = project.cover.publicURL;\n          return project;\n        }\n      );\n      setProjectsFromGQL([...formattedProjectsFromGQL]);\n      setProjectsHaveBeenFormatted(true);\n    }\n  }, [threeLatestProjects]);\n\n  return (\n    <Layout>\n      <SEO\n        title={`Projects`}\n        description={`All the projects I'm currently doing or already done, ranging from Back-End, Front-End, to Full-Stack`}\n      />\n      {projectsFromGQL.length > 0 && projectsHaveBeenFormatted === true ? (\n        <LatestProfileBanner projects={projectsFromGQL} />\n      ) : (\n        ''\n      )}\n    </Layout>\n  );\n}\n"],"sourceRoot":""}